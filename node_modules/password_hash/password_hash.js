var crypto = require('crypto');

var password_hash = function(password) {
  return {
    salt: function(saltSie) {
      saltSize = typeof saltSize  !== 'undefined' ?  saltSize  : 16;
      return crypto.randomBytes(saltSize).toString('base64');
    },
    hash: function(salt, iterations, keylen) { // pack: salt$iterasions$keylen$key
      iterations = typeof iterations  !== 'undefined' ?  iterations  : 1000;
      keylen = typeof keylen  !== 'undefined' ?  keylen  : 64;
      var key = crypto.pbkdf2Sync(password, salt, parseInt(iterations), parseInt(keylen), 'sha512').toString('base64');
      return salt + "$" + iterations + "$" + keylen + "$" + key;
    },
    verify: function(pack) {
      var pack = pack.split("$");
      return pack.join("$") == this.hash(pack[0], pack[1], pack[2]);
    }
  }
}

module.exports = password_hash;
