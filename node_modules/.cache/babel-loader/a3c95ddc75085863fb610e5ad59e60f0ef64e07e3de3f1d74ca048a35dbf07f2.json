{"ast":null,"code":"import { createCommentVNode as _createCommentVNode, createElementVNode as _createElementVNode, toDisplayString as _toDisplayString, openBlock as _openBlock, createElementBlock as _createElementBlock, resolveComponent as _resolveComponent, withCtx as _withCtx, createVNode as _createVNode, renderList as _renderList, Fragment as _Fragment, createTextVNode as _createTextVNode, createBlock as _createBlock, withModifiers as _withModifiers, resolveDirective as _resolveDirective, withDirectives as _withDirectives } from \"vue\";\nconst _hoisted_1 = /*#__PURE__*/_createElementVNode(\"p\", {\n  style: {\n    \"font-weight\": \"bold\",\n    \"font-size\": \"18px\",\n    \"margin-bottom\": \"5px\"\n  }\n}, \"Profile\", -1 /* HOISTED */);\nconst _hoisted_2 = {\n  key: 0,\n  style: {\n    \"font-size\": \"16px\"\n  }\n};\nconst _hoisted_3 = {\n  key: 1,\n  style: {\n    \"font-size\": \"16px\",\n    \"color\": \"#757575\"\n  }\n};\nconst _hoisted_4 = /*#__PURE__*/_createElementVNode(\"p\", {\n  style: {\n    \"font-weight\": \"bold\",\n    \"font-size\": \"18px\",\n    \"margin-bottom\": \"5px\"\n  }\n}, \"Admin\", -1 /* HOISTED */);\nconst _hoisted_5 = /*#__PURE__*/_createElementVNode(\"p\", {\n  style: {\n    \"font-weight\": \"bold\",\n    \"font-size\": \"18px\",\n    \"margin-bottom\": \"5px\"\n  }\n}, \"Agent\", -1 /* HOISTED */);\n\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_v_card_text = _resolveComponent(\"v-card-text\");\n  const _component_v_icon = _resolveComponent(\"v-icon\");\n  const _component_v_list_item_title = _resolveComponent(\"v-list-item-title\");\n  const _component_v_list_item = _resolveComponent(\"v-list-item\");\n  const _component_v_list = _resolveComponent(\"v-list\");\n  const _component_v_card = _resolveComponent(\"v-card\");\n  const _component_v_col = _resolveComponent(\"v-col\");\n  const _component_v_text_field = _resolveComponent(\"v-text-field\");\n  const _component_v_row = _resolveComponent(\"v-row\");\n  const _component_v_textarea = _resolveComponent(\"v-textarea\");\n  const _component_v_btn = _resolveComponent(\"v-btn\");\n  const _component_v_form = _resolveComponent(\"v-form\");\n  const _component_v_app_bar_title = _resolveComponent(\"v-app-bar-title\");\n  const _component_v_spacer = _resolveComponent(\"v-spacer\");\n  const _component_v_card_title = _resolveComponent(\"v-card-title\");\n  const _component_v_card_actions = _resolveComponent(\"v-card-actions\");\n  const _component_v_dialog = _resolveComponent(\"v-dialog\");\n  const _component_v_app_bar = _resolveComponent(\"v-app-bar\");\n  const _component_v_container = _resolveComponent(\"v-container\");\n  const _component_navbottom = _resolveComponent(\"navbottom\");\n  const _component_v_app = _resolveComponent(\"v-app\");\n  const _directive_icon = _resolveDirective(\"icon\");\n  return _openBlock(), _createBlock(_component_v_app, null, {\n    default: _withCtx(() => [_createVNode(_component_v_container, null, {\n      default: _withCtx(() => [_createVNode(_component_v_row, null, {\n        default: _withCtx(() => [_createCommentVNode(\" Side container for Admin \"), _createVNode(_component_v_col, {\n          cols: \"3\",\n          md: \"3\",\n          sm: \"10\"\n        }, {\n          default: _withCtx(() => [_createVNode(_component_v_card, {\n            class: \"info-box\",\n            style: {\n              \"border\": \"2px solid #2196F3\",\n              \"border-radius\": \"10px\",\n              \"box-shadow\": \"0 4px 8px rgba(0, 0, 0, 0.1)\"\n            }\n          }, {\n            default: _withCtx(() => [_createVNode(_component_v_card_text, null, {\n              default: _withCtx(() => [_hoisted_1, $data.token ? (_openBlock(), _createElementBlock(\"p\", _hoisted_2, _toDisplayString($data.Email), 1 /* TEXT */)) : (_openBlock(), _createElementBlock(\"p\", _hoisted_3, \"No user\"))]),\n              _: 1 /* STABLE */\n            }), _createCommentVNode(\" Move the Admin list items to the side container \"), _createVNode(_component_v_list, null, {\n              default: _withCtx(() => [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.users, user => {\n                return _openBlock(), _createBlock(_component_v_list_item, {\n                  key: user.id,\n                  onClick: $event => $options.openMessenger(user.Email)\n                }, {\n                  prepend: _withCtx(() => [_createVNode(_component_v_icon, null, {\n                    default: _withCtx(() => [_createTextVNode(\"mdi-account\")]),\n                    _: 1 /* STABLE */\n                  })]),\n\n                  default: _withCtx(() => [_hoisted_4, _createVNode(_component_v_list_item_title, null, {\n                    default: _withCtx(() => [_createTextVNode(_toDisplayString(user.Email), 1 /* TEXT */)]),\n\n                    _: 2 /* DYNAMIC */\n                  }, 1024 /* DYNAMIC_SLOTS */)]),\n\n                  _: 2 /* DYNAMIC */\n                }, 1032 /* PROPS, DYNAMIC_SLOTS */, [\"onClick\"]);\n              }), 128 /* KEYED_FRAGMENT */))]),\n\n              _: 1 /* STABLE */\n            }), _createVNode(_component_v_list, null, {\n              default: _withCtx(() => [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.hellos, hello => {\n                return _openBlock(), _createBlock(_component_v_list_item, {\n                  key: hello.id,\n                  onClick: $event => $options.openMessenger(hello.Email)\n                }, {\n                  prepend: _withCtx(() => [_createVNode(_component_v_icon, null, {\n                    default: _withCtx(() => [_createTextVNode(\"mdi-account\")]),\n                    _: 1 /* STABLE */\n                  })]),\n\n                  default: _withCtx(() => [_hoisted_5, _createVNode(_component_v_list_item_title, null, {\n                    default: _withCtx(() => [_createTextVNode(_toDisplayString(hello.Email), 1 /* TEXT */)]),\n\n                    _: 2 /* DYNAMIC */\n                  }, 1024 /* DYNAMIC_SLOTS */)]),\n\n                  _: 2 /* DYNAMIC */\n                }, 1032 /* PROPS, DYNAMIC_SLOTS */, [\"onClick\"]);\n              }), 128 /* KEYED_FRAGMENT */))]),\n\n              _: 1 /* STABLE */\n            })]),\n\n            _: 1 /* STABLE */\n          })]),\n\n          _: 1 /* STABLE */\n        }), _createVNode(_component_v_col, {\n          cols: \"9\",\n          md: \"9\",\n          sm: \"10\"\n        }, {\n          default: _withCtx(() => [_createVNode(_component_v_card, {\n            class: \"info-box\",\n            style: {\n              \"border\": \"2px solid #2196F3\",\n              \"border-radius\": \"10px\",\n              \"box-shadow\": \"0 4px 8px rgba(0, 0, 0, 0.1)\"\n            }\n          }, {\n            default: _withCtx(() => [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.messages, message => {\n              return _openBlock(), _createBlock(_component_v_card_text, null, {\n                default: _withCtx(() => [_createElementVNode(\"p\", null, _toDisplayString(message.Email), 1 /* TEXT */), _createElementVNode(\"p\", null, _toDisplayString(message.Message), 1 /* TEXT */)]),\n\n                _: 2 /* DYNAMIC */\n              }, 1024 /* DYNAMIC_SLOTS */);\n            }), 256 /* UNKEYED_FRAGMENT */)), (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(_ctx.adminmess, adminmesses => {\n              return _openBlock(), _createBlock(_component_v_card_text, null, {\n                default: _withCtx(() => [_createElementVNode(\"p\", null, _toDisplayString(adminmesses.Email), 1 /* TEXT */), _createElementVNode(\"p\", null, _toDisplayString(adminmesses.Message), 1 /* TEXT */)]),\n\n                _: 2 /* DYNAMIC */\n              }, 1024 /* DYNAMIC_SLOTS */);\n            }), 256 /* UNKEYED_FRAGMENT */)), _createVNode(_component_v_form, {\n              onSubmit: _withModifiers(_ctx.submitFeedback, [\"prevent\"])\n            }, {\n              default: _withCtx(() => [_createVNode(_component_v_row, null, {\n                default: _withCtx(() => [_createVNode(_component_v_col, {\n                  cols: \"12\"\n                }, {\n                  default: _withCtx(() => [_createCommentVNode(\" Email Field \"), $data.token ? (_openBlock(), _createBlock(_component_v_text_field, {\n                    key: 0,\n                    modelValue: $data.Email,\n                    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $data.Email = $event),\n                    readonly: \"\"\n                  }, null, 8 /* PROPS */, [\"modelValue\"])) : (_openBlock(), _createBlock(_component_v_text_field, {\n                    key: 1,\n                    modelValue: $data.Email,\n                    \"onUpdate:modelValue\": _cache[1] || (_cache[1] = $event => $data.Email = $event),\n                    label: \"Email\",\n                    required: \"\"\n                  }, null, 8 /* PROPS */, [\"modelValue\"]))]),\n                  _: 1 /* STABLE */\n                })]),\n\n                _: 1 /* STABLE */\n              }), _createVNode(_component_v_row, null, {\n                default: _withCtx(() => [_createVNode(_component_v_col, {\n                  cols: \"12\"\n                }, {\n                  default: _withCtx(() => [_createVNode(_component_v_textarea, {\n                    modelValue: $data.Message,\n                    \"onUpdate:modelValue\": _cache[2] || (_cache[2] = $event => $data.Message = $event),\n                    label: \"Message\",\n                    rows: \"5\",\n                    outlined: \"\"\n                  }, null, 8 /* PROPS */, [\"modelValue\"])]),\n                  _: 1 /* STABLE */\n                })]),\n\n                _: 1 /* STABLE */\n              }), _createVNode(_component_v_row, {\n                class: \"d-flex justify-center\"\n              }, {\n                default: _withCtx(() => [_createVNode(_component_v_col, {\n                  cols: \"12\",\n                  class: \"text-center\"\n                }, {\n                  default: _withCtx(() => [_createVNode(_component_v_btn, {\n                    type: \"submit\",\n                    color: \"primary\"\n                  }, {\n                    default: _withCtx(() => [_createTextVNode(\"Submit\")]),\n                    _: 1 /* STABLE */\n                  })]),\n\n                  _: 1 /* STABLE */\n                })]),\n\n                _: 1 /* STABLE */\n              })]),\n\n              _: 1 /* STABLE */\n            }, 8 /* PROPS */, [\"onSubmit\"])]),\n            _: 1 /* STABLE */\n          })]),\n\n          _: 1 /* STABLE */\n        }), _createCommentVNode(\" Main content area \"), _createVNode(_component_v_col, {\n          cols: \"9\"\n        }, {\n          default: _withCtx(() => [_createVNode(_component_v_app_bar, {\n            color: \"rgb(25, 152, 194)\",\n            dark: \"\",\n            dense: \"\"\n          }, {\n            default: _withCtx(() => [_createVNode(_component_v_app_bar_title, {\n              class: \"white--text\"\n            }, {\n              default: _withCtx(() => [_createTextVNode(\"Funeral Homes\")]),\n              _: 1 /* STABLE */\n            }), _createVNode(_component_v_spacer), _createVNode(_component_v_btn, {\n              onClick: $options.showNotification\n            }, {\n              default: _withCtx(() => [_withDirectives((_openBlock(), _createBlock(_component_v_icon, null, {\n                default: _withCtx(() => [_createTextVNode(\"mdi-bell\")]),\n                _: 1 /* STABLE */\n              })), [[_directive_icon]])]),\n              _: 1 /* STABLE */\n            }, 8 /* PROPS */, [\"onClick\"]), _createVNode(_component_v_dialog, {\n              modelValue: $data.notificationMessage,\n              \"onUpdate:modelValue\": _cache[4] || (_cache[4] = $event => $data.notificationMessage = $event),\n              \"max-width\": \"400\"\n            }, {\n              default: _withCtx(() => [_createVNode(_component_v_card, null, {\n                default: _withCtx(() => [_createVNode(_component_v_card_title, null, {\n                  default: _withCtx(() => [_createTextVNode(\"Notification\")]),\n                  _: 1 /* STABLE */\n                }), _createVNode(_component_v_card_text, null, {\n                  default: _withCtx(() => [_createTextVNode(_toDisplayString($data.notificationMessage), 1 /* TEXT */)]),\n\n                  _: 1 /* STABLE */\n                }), _createVNode(_component_v_card_actions, null, {\n                  default: _withCtx(() => [_createVNode(_component_v_btn, {\n                    color: \"primary\",\n                    onClick: _cache[3] || (_cache[3] = $event => $data.notificationMessage = false)\n                  }, {\n                    default: _withCtx(() => [_createTextVNode(\"Close\")]),\n                    _: 1 /* STABLE */\n                  })]),\n\n                  _: 1 /* STABLE */\n                })]),\n\n                _: 1 /* STABLE */\n              })]),\n\n              _: 1 /* STABLE */\n            }, 8 /* PROPS */, [\"modelValue\"])]),\n            _: 1 /* STABLE */\n          })]),\n\n          _: 1 /* STABLE */\n        })]),\n\n        _: 1 /* STABLE */\n      })]),\n\n      _: 1 /* STABLE */\n    }), _createVNode(_component_navbottom)]),\n    _: 1 /* STABLE */\n  });\n}","map":{"version":3,"names":["_createElementVNode","style","_createBlock","_component_v_app","_createVNode","_component_v_container","_component_v_row","_createCommentVNode","_component_v_col","cols","md","sm","_component_v_card","class","_component_v_card_text","_hoisted_1","$data","token","_createElementBlock","_hoisted_2","_toDisplayString","Email","_hoisted_3","_component_v_list","_Fragment","_renderList","users","user","_component_v_list_item","key","id","onClick","$event","$options","openMessenger","prepend","_withCtx","_component_v_icon","_hoisted_4","_component_v_list_item_title","hellos","hello","_hoisted_5","messages","message","Message","_ctx","adminmess","adminmesses","_component_v_form","onSubmit","_withModifiers","submitFeedback","_component_v_text_field","readonly","label","required","_component_v_textarea","rows","outlined","_component_v_btn","type","color","_component_v_app_bar","dark","dense","_component_v_app_bar_title","_component_v_spacer","showNotification","_component_v_dialog","notificationMessage","_component_v_card_title","_component_v_card_actions","_cache","_component_navbottom"],"sources":["C:\\laragon\\www\\GitHub\\Funeral_System\\src\\views\\Messages.vue"],"sourcesContent":["<template>\r\n  <v-app>\r\n    <v-container>\r\n      <v-row>\r\n        <!-- Side container for Admin -->\r\n        <v-col cols=\"3\" md=\"3\" sm=\"10\">\r\n          <v-card class=\"info-box\" style=\"border: 2px solid #2196F3; border-radius: 10px; box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);\">\r\n            <v-card-text>\r\n              <p style=\"font-weight: bold; font-size: 18px; margin-bottom: 5px;\">Profile</p>\r\n              <p v-if=\"token\" style=\"font-size: 16px;\">{{ Email }}</p>\r\n              <p v-else style=\"font-size: 16px; color: #757575;\">No user</p>\r\n            </v-card-text>\r\n\r\n            <!-- Move the Admin list items to the side container -->\r\n            <v-list>\r\n      <v-list-item v-for=\"user in users\" :key=\"user.id\" @click=\"openMessenger(user.Email)\">\r\n        <p style=\"font-weight: bold; font-size: 18px; margin-bottom: 5px;\">Admin</p>\r\n        <template v-slot:prepend>\r\n          <v-icon>mdi-account</v-icon>\r\n        </template>\r\n        <v-list-item-title>{{ user.Email }}</v-list-item-title>\r\n        <!-- Add more v-list-item-content slots for other record details -->\r\n      </v-list-item>\r\n    </v-list>\r\n\r\n    <v-list>\r\n      <v-list-item v-for=\"hello in hellos\" :key=\"hello.id\" @click=\"openMessenger(hello.Email)\">\r\n        <p style=\"font-weight: bold; font-size: 18px; margin-bottom: 5px;\">Agent</p>\r\n        <template v-slot:prepend>\r\n          <v-icon>mdi-account</v-icon>\r\n        </template>\r\n        <v-list-item-title>{{ hello.Email }}</v-list-item-title>\r\n        <!-- Add more v-list-item-content slots for other record details -->\r\n      </v-list-item>\r\n    </v-list>\r\n          </v-card>\r\n        </v-col>\r\n        <v-col cols=\"9\" md=\"9\" sm=\"10\"  >\r\n          <v-card class=\"info-box\" style=\"border: 2px solid #2196F3; border-radius: 10px; box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);\">\r\n            <v-card-text v-for=\"message in messages\">\r\n                <p>{{ message.Email }}</p>\r\n              <p>{{ message.Message }}</p>\r\n            </v-card-text>\r\n            <v-card-text v-for=\"adminmesses in adminmess\">\r\n                <p>{{ adminmesses.Email }}</p>\r\n              <p>{{ adminmesses.Message }}</p>\r\n            </v-card-text>\r\n            <v-form @submit.prevent=\"submitFeedback\">\r\n                <v-row>\r\n                  <v-col cols=\"12\">\r\n                    <!-- Email Field -->\r\n                    <v-text-field\r\n                      v-if=\"token\"\r\n                      v-model=\"Email\"\r\n                      readonly\r\n                    ></v-text-field>\r\n                    <v-text-field\r\n                      v-else\r\n                      v-model=\"Email\"\r\n                      label=\"Email\"\r\n                      required\r\n                    ></v-text-field>\r\n                  </v-col>\r\n                </v-row>\r\n                <v-row>\r\n                  <v-col cols=\"12\">\r\n                    <v-textarea\r\n                      v-model=\"Message\"\r\n                      label=\"Message\"\r\n                      rows=\"5\"\r\n                      outlined\r\n                    ></v-textarea>\r\n                  </v-col>\r\n                </v-row>\r\n                <v-row class=\"d-flex justify-center\">\r\n                  <v-col cols=\"12\" class=\"text-center\">\r\n                    <v-btn type=\"submit\" color=\"primary\">Submit</v-btn>\r\n                  </v-col>\r\n                </v-row>\r\n              </v-form>\r\n          </v-card>\r\n        </v-col>\r\n        <!-- Main content area -->\r\n        <v-col cols=\"9\">\r\n          <v-app-bar color=\"rgb(25, 152, 194)\" dark dense>\r\n            <v-app-bar-title class=\"white--text\">Funeral Homes</v-app-bar-title>\r\n            <v-spacer></v-spacer>\r\n            <v-btn @click=\"showNotification\">\r\n              <v-icon v-icon>mdi-bell</v-icon>\r\n            </v-btn>\r\n            <v-dialog v-model=\"notificationMessage\" max-width=\"400\">\r\n              <v-card>\r\n                <v-card-title>Notification</v-card-title>\r\n                <v-card-text>\r\n                  {{ notificationMessage }}\r\n                </v-card-text>\r\n                <v-card-actions>\r\n                  <v-btn color=\"primary\" @click=\"notificationMessage = false\">Close</v-btn>\r\n                </v-card-actions>\r\n              </v-card>\r\n            </v-dialog>\r\n          </v-app-bar>\r\n           \r\n            \r\n        </v-col>\r\n      </v-row>\r\n    </v-container>\r\n\r\n    <navbottom />\r\n  </v-app>\r\n</template>\r\n\r\n<!-- ... (existing script and style sections) ... -->\r\n\r\n\r\n<script>\r\nimport navbottom from \"@/components/navbottom.vue\";\r\nimport { jwtDecode as jwt_decode } from \"jwt-decode\";\r\nimport axios from 'axios';\r\nexport default {\r\n  components: {\r\n    navbottom,\r\n  },\r\n  data() {\r\n    return {\r\n      users:[],\r\n      hellos:[],\r\n      selectedEmail: null,\r\n      notificationMessage: false,\r\n      Email: \"\",\r\n      token: sessionStorage.getItem('token') !== null,\r\n      newMessage: '',\r\n      messages: [],\r\n      Message: \"\",\r\n    };\r\n  },\r\n  created() {\r\n    this.getmessageplanholder();\r\n    this.getmessageAdmin();\r\n    this.getAdminRecord();\r\n    this.getAgentRecord();\r\n    if (this.token) {\r\n      this.fetchUserDetails();\r\n    }\r\n  },\r\n  methods: {\r\n    openMessenger(email) {\r\n      this.selectedEmail = email;\r\n      // You can add logic to display the messenger or perform other actions here\r\n    },\r\n    async getmessageplanholder () {\r\n        try {\r\n          const respond = await axios.get('getmessagePlanHolder');\r\n            this.messages = respond.data;\r\n        } catch (error) {\r\n          console.log(error);\r\n        }\r\n      },\r\n      async getmessageAdmin () {\r\n        try {\r\n          const respond = await axios.get('getmessageAdmin');\r\n            this.adminmess = respond.data;\r\n        } catch (error) {\r\n          console.log(error);\r\n        }\r\n      },\r\n    async getAdminRecord () {\r\n        try {\r\n          const respond = await axios.get('getAdminProfiles');\r\n            this.users = respond.data;\r\n        } catch (error) {\r\n          console.log(error);\r\n        }\r\n      },\r\n      async getAgentRecord () {\r\n        try {\r\n          const respond = await axios.get('getAgentProfiles');\r\n            this.hellos = respond.data;\r\n        } catch (error) {\r\n          console.log(error);\r\n        }\r\n      },\r\n    showNotification() {\r\n      this.notificationMessage = \"This is a notification message.\";\r\n    },\r\n    async fetchUserDetails() {\r\n      try {\r\n        const token = sessionStorage.getItem(\"token\");\r\n        const decodedToken = jwt_decode(token);\r\n        this.Email = decodedToken.email;\r\n      } catch (error) {\r\n        console.error(\"Error fetching user details:\", error);\r\n      }\r\n    },\r\n    \r\n  },\r\n  \r\n};\r\n</script>\r\n\r\n\r\n<style>\r\n/* Add styles for the message container */\r\n.v-container{\r\n  margin-top: 150px;\r\n}\r\n.message-container {\r\n  margin-top: 20px;\r\n}\r\n\r\n/* Style for message cards */\r\n.message-card {\r\n  width: 300px;\r\n  margin: 10px;\r\n}\r\n\r\n/* Style for sent messages */\r\n.sent {\r\n  background-color: rgb(25, 152, 194);\r\n  color: white;\r\n}\r\n\r\n/* Style for received messages */\r\n.received {\r\n  background-color: #e0e0e0;\r\n}\r\n\r\n/* Add styles for the chat card */\r\n.chat-container {\r\n  display: flex;\r\n  flex-direction: column;\r\n  min-height: 10vh;\r\n  padding: 16px;\r\n  background-color: #f5f5f5;\r\n}\r\n\r\n/* Add styles for the chat messages */\r\n.chat-messages {\r\n  flex: 1;\r\n  overflow-y: auto;\r\n  padding: 16px;\r\n}\r\n\r\n/* Add styles for the my-message class */\r\n.my-message {\r\n  background-color: #DCF8C6;\r\n  align-self: flex-end;\r\n  border-radius: 8px;\r\n  margin: 4px 0;\r\n  padding: 8px;\r\n}\r\n\r\n/* Add styles for the chat input form */\r\n.chat-input {\r\n  padding: 16px;\r\n}\r\n\r\n/* Add styles for the chat toggle button */\r\n.chat-toggle-button {\r\n  position: fixed;\r\n  bottom: 16px;\r\n  right: 26px;\r\n  background-color: white;\r\n}\r\n\r\n/* Add styles for the chat toggle button icon */\r\n.chat-toggle-button .v-icon {\r\n  color: rgb(25, 152, 194);\r\n}\r\n\r\n/* Add styles for the send button */\r\n.send-button {\r\n  margin-top: 66px;\r\n}\r\n\r\n/* Add styles for the message time */\r\n.message-time {\r\n  color: gray;\r\n  font-size: 12px;\r\n}\r\n\r\n/* Add responsive styles */\r\n@media (max-width: 600px) {\r\n  .chat-container {\r\n    padding: 8px;\r\n  }\r\n\r\n  .chat-messages {\r\n    padding: 8px;\r\n  }\r\n\r\n  .chat-input {\r\n    padding: 8px;\r\n  }\r\n\r\n  .send-button {\r\n    margin-top: 8px;\r\n  }\r\n}\r\n</style>\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}