{"ast":null,"code":"import navbottom from \"@/components/navbottom.vue\";\nimport { jwtDecode as jwt_decode } from \"jwt-decode\";\nimport axios from \"axios\";\nexport default {\n  components: {\n    navbottom\n  },\n  data() {\n    return {\n      Email: this.getEmailFromToken(),\n      Message: \"\",\n      token: sessionStorage.getItem('token') !== null\n    };\n  },\n  methods: {\n    getEmailFromToken() {\n      const token = sessionStorage.getItem(\"token\");\n      if (token) {\n        const decodedToken = jwt_decode(token);\n        return decodedToken.email; // Assuming the email is stored in 'sub' field\n      }\n\n      return \"\";\n    },\n    async submitFeedback() {\n      try {\n        const response = await axios.post(\"/submit-feedback\", {\n          Email: this.Email,\n          Message: this.Message\n        });\n        this.Message = \"\";\n      } catch (error) {\n        console.error(error);\n      }\n    }\n  }\n};","map":{"version":3,"names":["navbottom","jwtDecode","jwt_decode","axios","components","data","Email","getEmailFromToken","Message","token","sessionStorage","getItem","methods","decodedToken","email","submitFeedback","response","post","error","console"],"sources":["C:\\laragon\\www\\GitHub\\Funeral_System\\src\\views\\Feedback.vue"],"sourcesContent":["<template>\r\n  <v-app>\r\n    <v-app-bar color=\"rgb(25, 152, 194)\" dark dense>\r\n      <v-app-bar-title class=\"white--text\">Funeral Homes</v-app-bar-title>\r\n      <v-spacer></v-spacer>\r\n    </v-app-bar>\r\n    <navbottom />\r\n      <v-row justify=\"center\" style=\"padding-top: 10%\">\r\n        <v-col cols=\"12\" sm=\"8\" md=\"6\">\r\n          <v-card elevation=\"2\">\r\n            <v-card-title\r\n              class=\"headline text-center\"\r\n              style=\"color: rgb(25, 152, 194); font-size: 24px\"\r\n            >\r\n              Users Feedback\r\n            </v-card-title>\r\n            <v-card-text>\r\n              <v-form @submit.prevent=\"submitFeedback\">\r\n                <v-row>\r\n                  <v-col cols=\"12\">\r\n                    <!-- Email Field -->\r\n                    <v-text-field\r\n                      v-if=\"token\"\r\n                      v-model=\"Email\"\r\n                      readonly\r\n                    ></v-text-field>\r\n                    <v-text-field\r\n                      v-else\r\n                      v-model=\"Email\"\r\n                      label=\"Email\"\r\n                      required\r\n                    ></v-text-field>\r\n                  </v-col>\r\n                </v-row>\r\n                <v-row>\r\n                  <v-col cols=\"12\">\r\n                    <v-textarea\r\n                      v-model=\"Message\"\r\n                      label=\"Message\"\r\n                      rows=\"5\"\r\n                      outlined\r\n                    ></v-textarea>\r\n                  </v-col>\r\n                </v-row>\r\n                <v-row>\r\n                  <v-col cols=\"12\" class=\"text-center\">\r\n                    <v-btn type=\"submit\" color=\"primary\">Submit Feedback</v-btn>\r\n                  </v-col>\r\n                </v-row>\r\n              </v-form>\r\n            </v-card-text>\r\n          </v-card>\r\n        </v-col>\r\n      </v-row>\r\n  </v-app>\r\n</template>\r\n\r\n<script>\r\nimport navbottom from \"@/components/navbottom.vue\";\r\nimport { jwtDecode as jwt_decode } from \"jwt-decode\";\r\nimport axios from \"axios\";\r\nexport default {\r\n  components: {\r\n    navbottom,\r\n  },\r\n  data() {\r\n    return {\r\n      Email: this.getEmailFromToken(),\r\n      Message: \"\",\r\n      token: sessionStorage.getItem('token') !== null,\r\n    };\r\n  },\r\n  methods: {\r\n    getEmailFromToken() {\r\n    const token = sessionStorage.getItem(\"token\");\r\n    if (token) {\r\n      const decodedToken = jwt_decode(token);\r\n      return decodedToken.email; // Assuming the email is stored in 'sub' field\r\n    }\r\n    return \"\";\r\n  },\r\n    async submitFeedback() {\r\n      try {\r\n        const response = await axios.post(\"/submit-feedback\", {\r\n          Email: this.Email,\r\n          Message: this.Message,\r\n        });\r\n        this.Message = \"\";\r\n      } catch (error) {\r\n        console.error(error);\r\n      }\r\n    },\r\n  },\r\n};\r\n</script>\r\n"],"mappings":"AA0DA,OAAOA,SAAQ,MAAO,4BAA4B;AAClD,SAASC,SAAQ,IAAKC,UAAS,QAAS,YAAY;AACpD,OAAOC,KAAI,MAAO,OAAO;AACzB,eAAe;EACbC,UAAU,EAAE;IACVJ;EACF,CAAC;EACDK,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,KAAK,EAAE,IAAI,CAACC,iBAAiB,CAAC,CAAC;MAC/BC,OAAO,EAAE,EAAE;MACXC,KAAK,EAAEC,cAAc,CAACC,OAAO,CAAC,OAAO,MAAM;IAC7C,CAAC;EACH,CAAC;EACDC,OAAO,EAAE;IACPL,iBAAiBA,CAAA,EAAG;MACpB,MAAME,KAAI,GAAIC,cAAc,CAACC,OAAO,CAAC,OAAO,CAAC;MAC7C,IAAIF,KAAK,EAAE;QACT,MAAMI,YAAW,GAAIX,UAAU,CAACO,KAAK,CAAC;QACtC,OAAOI,YAAY,CAACC,KAAK,EAAE;MAC7B;;MACA,OAAO,EAAE;IACX,CAAC;IACC,MAAMC,cAAcA,CAAA,EAAG;MACrB,IAAI;QACF,MAAMC,QAAO,GAAI,MAAMb,KAAK,CAACc,IAAI,CAAC,kBAAkB,EAAE;UACpDX,KAAK,EAAE,IAAI,CAACA,KAAK;UACjBE,OAAO,EAAE,IAAI,CAACA;QAChB,CAAC,CAAC;QACF,IAAI,CAACA,OAAM,GAAI,EAAE;MACnB,EAAE,OAAOU,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAACA,KAAK,CAAC;MACtB;IACF;EACF;AACF,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}