{"ast":null,"code":"import navbottom from \"@/components/navbottom.vue\";\nimport { jwtDecode as jwt_decode } from \"jwt-decode\";\nimport axios from 'axios';\nexport default {\n  components: {\n    navbottom\n  },\n  data() {\n    return {\n      users: [],\n      hellos: [],\n      selectedEmail: null,\n      notificationMessage: false,\n      Email: \"\",\n      token: sessionStorage.getItem('token') !== null,\n      newMessage: '',\n      messages: [],\n      Message: \"\"\n    };\n  },\n  created() {\n    this.getmessageplanholder();\n    this.getmessageAdmin();\n    this.getAdminRecord();\n    this.getAgentRecord();\n    if (this.token) {\n      this.fetchUserDetails();\n    }\n  },\n  methods: {\n    openMessenger(email) {\n      this.selectedEmail = email;\n      // You can add logic to display the messenger or perform other actions here\n    },\n\n    async getmessageplanholder() {\n      try {\n        const respond = await axios.get('getmessagePlanHolder');\n        this.messages = respond.data;\n      } catch (error) {\n        console.log(error);\n      }\n    },\n    async getmessageAdmin() {\n      try {\n        const respond = await axios.get('getmessageAdmin');\n        this.adminmess = respond.data;\n      } catch (error) {\n        console.log(error);\n      }\n    },\n    async getAdminRecord() {\n      try {\n        const respond = await axios.get('getAdminProfiles');\n        this.users = respond.data;\n      } catch (error) {\n        console.log(error);\n      }\n    },\n    async getAgentRecord() {\n      try {\n        const respond = await axios.get('getAgentProfiles');\n        this.hellos = respond.data;\n      } catch (error) {\n        console.log(error);\n      }\n    },\n    showNotification() {\n      this.notificationMessage = \"This is a notification message.\";\n    },\n    async fetchUserDetails() {\n      try {\n        const token = sessionStorage.getItem(\"token\");\n        const decodedToken = jwt_decode(token);\n        this.Email = decodedToken.email;\n      } catch (error) {\n        console.error(\"Error fetching user details:\", error);\n      }\n    }\n  }\n};","map":{"version":3,"names":["navbottom","jwtDecode","jwt_decode","axios","components","data","users","hellos","selectedEmail","notificationMessage","Email","token","sessionStorage","getItem","newMessage","messages","Message","created","getmessageplanholder","getmessageAdmin","getAdminRecord","getAgentRecord","fetchUserDetails","methods","openMessenger","email","respond","get","error","console","log","adminmess","showNotification","decodedToken"],"sources":["C:\\laragon\\www\\GitHub\\Funeral_System\\src\\views\\Messages.vue"],"sourcesContent":["<template>\r\n  <v-app>\r\n    <v-container>\r\n      <v-row>\r\n        <!-- Side container for Admin -->\r\n        <v-col cols=\"3\" md=\"3\" sm=\"10\">\r\n          <v-card class=\"info-box\" style=\"border: 2px solid #2196F3; border-radius: 10px; box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);\">\r\n            <v-card-text>\r\n              <p style=\"font-weight: bold; font-size: 18px; margin-bottom: 5px;\">Profile</p>\r\n              <p v-if=\"token\" style=\"font-size: 16px;\">{{ Email }}</p>\r\n              <p v-else style=\"font-size: 16px; color: #757575;\">No user</p>\r\n            </v-card-text>\r\n\r\n            <!-- Move the Admin list items to the side container -->\r\n            <v-list>\r\n      <v-list-item v-for=\"user in users\" :key=\"user.id\" @click=\"openMessenger(user.Email)\">\r\n        <p style=\"font-weight: bold; font-size: 18px; margin-bottom: 5px;\">Admin</p>\r\n        <template v-slot:prepend>\r\n          <v-icon>mdi-account</v-icon>\r\n        </template>\r\n        <v-list-item-title>{{ user.Email }}</v-list-item-title>\r\n        <!-- Add more v-list-item-content slots for other record details -->\r\n      </v-list-item>\r\n    </v-list>\r\n\r\n    <v-list>\r\n      <v-list-item v-for=\"hello in hellos\" :key=\"hello.id\" @click=\"openMessenger(hello.Email)\">\r\n        <p style=\"font-weight: bold; font-size: 18px; margin-bottom: 5px;\">Agent</p>\r\n        <template v-slot:prepend>\r\n          <v-icon>mdi-account</v-icon>\r\n        </template>\r\n        <v-list-item-title>{{ hello.Email }}</v-list-item-title>\r\n        <!-- Add more v-list-item-content slots for other record details -->\r\n      </v-list-item>\r\n    </v-list>\r\n          </v-card>\r\n        </v-col>\r\n        <v-col cols=\"9\" md=\"9\" sm=\"10\"  >\r\n          <v-card class=\"info-box\" style=\"border: 2px solid #2196F3; border-radius: 10px; box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);\">\r\n            <v-card-text v-for=\"message in messages\">\r\n                <p>{{ message.Email }}</p>\r\n              <p>{{ message.Message }}</p>\r\n            </v-card-text>\r\n            <v-card-text v-for=\"adminmesses in adminmess\">\r\n                <p>{{ adminmesses.Email }}</p>\r\n              <p>{{ adminmesses.Message }}</p>\r\n            </v-card-text>\r\n            <v-form @submit.prevent=\"submitFeedback\">\r\n                <v-row>\r\n                  <v-col cols=\"12\">\r\n                    <!-- Email Field -->\r\n                    <v-text-field\r\n                      v-if=\"token\"\r\n                      v-model=\"Email\"\r\n                      readonly\r\n                    ></v-text-field>\r\n                    <v-text-field\r\n                      v-else\r\n                      v-model=\"Email\"\r\n                      label=\"Email\"\r\n                      required\r\n                    ></v-text-field>\r\n                  </v-col>\r\n                </v-row>\r\n                <v-row>\r\n                  <v-col cols=\"12\">\r\n                    <v-textarea\r\n                      v-model=\"Message\"\r\n                      label=\"Message\"\r\n                      rows=\"5\"\r\n                      outlined\r\n                    ></v-textarea>\r\n                  </v-col>\r\n                </v-row>\r\n                <v-row class=\"d-flex justify-center\">\r\n                  <v-col cols=\"12\" class=\"text-center\">\r\n                    <v-btn type=\"submit\" color=\"primary\">Submit</v-btn>\r\n                  </v-col>\r\n                </v-row>\r\n              </v-form>\r\n          </v-card>\r\n        </v-col>\r\n        <!-- Main content area -->\r\n        <v-col cols=\"9\">\r\n          <v-app-bar color=\"rgb(25, 152, 194)\" dark dense>\r\n            <v-app-bar-title class=\"white--text\">Funeral Homes</v-app-bar-title>\r\n            <v-spacer></v-spacer>\r\n            <v-btn @click=\"showNotification\">\r\n              <v-icon v-icon>mdi-bell</v-icon>\r\n            </v-btn>\r\n            <v-dialog v-model=\"notificationMessage\" max-width=\"400\">\r\n              <v-card>\r\n                <v-card-title>Notification</v-card-title>\r\n                <v-card-text>\r\n                  {{ notificationMessage }}\r\n                </v-card-text>\r\n                <v-card-actions>\r\n                  <v-btn color=\"primary\" @click=\"notificationMessage = false\">Close</v-btn>\r\n                </v-card-actions>\r\n              </v-card>\r\n            </v-dialog>\r\n          </v-app-bar>\r\n           \r\n            \r\n        </v-col>\r\n      </v-row>\r\n    </v-container>\r\n\r\n    <navbottom />\r\n  </v-app>\r\n</template>\r\n\r\n<!-- ... (existing script and style sections) ... -->\r\n\r\n\r\n<script>\r\nimport navbottom from \"@/components/navbottom.vue\";\r\nimport { jwtDecode as jwt_decode } from \"jwt-decode\";\r\nimport axios from 'axios';\r\nexport default {\r\n  components: {\r\n    navbottom,\r\n  },\r\n  data() {\r\n    return {\r\n      users:[],\r\n      hellos:[],\r\n      selectedEmail: null,\r\n      notificationMessage: false,\r\n      Email: \"\",\r\n      token: sessionStorage.getItem('token') !== null,\r\n      newMessage: '',\r\n      messages: [],\r\n      Message: \"\",\r\n    };\r\n  },\r\n  created() {\r\n    this.getmessageplanholder();\r\n    this.getmessageAdmin();\r\n    this.getAdminRecord();\r\n    this.getAgentRecord();\r\n    if (this.token) {\r\n      this.fetchUserDetails();\r\n    }\r\n  },\r\n  methods: {\r\n    openMessenger(email) {\r\n      this.selectedEmail = email;\r\n      // You can add logic to display the messenger or perform other actions here\r\n    },\r\n    async getmessageplanholder () {\r\n        try {\r\n          const respond = await axios.get('getmessagePlanHolder');\r\n            this.messages = respond.data;\r\n        } catch (error) {\r\n          console.log(error);\r\n        }\r\n      },\r\n      async getmessageAdmin () {\r\n        try {\r\n          const respond = await axios.get('getmessageAdmin');\r\n            this.adminmess = respond.data;\r\n        } catch (error) {\r\n          console.log(error);\r\n        }\r\n      },\r\n    async getAdminRecord () {\r\n        try {\r\n          const respond = await axios.get('getAdminProfiles');\r\n            this.users = respond.data;\r\n        } catch (error) {\r\n          console.log(error);\r\n        }\r\n      },\r\n      async getAgentRecord () {\r\n        try {\r\n          const respond = await axios.get('getAgentProfiles');\r\n            this.hellos = respond.data;\r\n        } catch (error) {\r\n          console.log(error);\r\n        }\r\n      },\r\n    showNotification() {\r\n      this.notificationMessage = \"This is a notification message.\";\r\n    },\r\n    async fetchUserDetails() {\r\n      try {\r\n        const token = sessionStorage.getItem(\"token\");\r\n        const decodedToken = jwt_decode(token);\r\n        this.Email = decodedToken.email;\r\n      } catch (error) {\r\n        console.error(\"Error fetching user details:\", error);\r\n      }\r\n    },\r\n    \r\n  },\r\n  \r\n};\r\n</script>\r\n\r\n\r\n<style>\r\n/* Add styles for the message container */\r\n.v-container{\r\n  margin-top: 150px;\r\n}\r\n.message-container {\r\n  margin-top: 20px;\r\n}\r\n\r\n/* Style for message cards */\r\n.message-card {\r\n  width: 300px;\r\n  margin: 10px;\r\n}\r\n\r\n/* Style for sent messages */\r\n.sent {\r\n  background-color: rgb(25, 152, 194);\r\n  color: white;\r\n}\r\n\r\n/* Style for received messages */\r\n.received {\r\n  background-color: #e0e0e0;\r\n}\r\n\r\n/* Add styles for the chat card */\r\n.chat-container {\r\n  display: flex;\r\n  flex-direction: column;\r\n  min-height: 10vh;\r\n  padding: 16px;\r\n  background-color: #f5f5f5;\r\n}\r\n\r\n/* Add styles for the chat messages */\r\n.chat-messages {\r\n  flex: 1;\r\n  overflow-y: auto;\r\n  padding: 16px;\r\n}\r\n\r\n/* Add styles for the my-message class */\r\n.my-message {\r\n  background-color: #DCF8C6;\r\n  align-self: flex-end;\r\n  border-radius: 8px;\r\n  margin: 4px 0;\r\n  padding: 8px;\r\n}\r\n\r\n/* Add styles for the chat input form */\r\n.chat-input {\r\n  padding: 16px;\r\n}\r\n\r\n/* Add styles for the chat toggle button */\r\n.chat-toggle-button {\r\n  position: fixed;\r\n  bottom: 16px;\r\n  right: 26px;\r\n  background-color: white;\r\n}\r\n\r\n/* Add styles for the chat toggle button icon */\r\n.chat-toggle-button .v-icon {\r\n  color: rgb(25, 152, 194);\r\n}\r\n\r\n/* Add styles for the send button */\r\n.send-button {\r\n  margin-top: 66px;\r\n}\r\n\r\n/* Add styles for the message time */\r\n.message-time {\r\n  color: gray;\r\n  font-size: 12px;\r\n}\r\n\r\n/* Add responsive styles */\r\n@media (max-width: 600px) {\r\n  .chat-container {\r\n    padding: 8px;\r\n  }\r\n\r\n  .chat-messages {\r\n    padding: 8px;\r\n  }\r\n\r\n  .chat-input {\r\n    padding: 8px;\r\n  }\r\n\r\n  .send-button {\r\n    margin-top: 8px;\r\n  }\r\n}\r\n</style>\r\n"],"mappings":"AAoHA,OAAOA,SAAQ,MAAO,4BAA4B;AAClD,SAASC,SAAQ,IAAKC,UAAS,QAAS,YAAY;AACpD,OAAOC,KAAI,MAAO,OAAO;AACzB,eAAe;EACbC,UAAU,EAAE;IACVJ;EACF,CAAC;EACDK,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,KAAK,EAAC,EAAE;MACRC,MAAM,EAAC,EAAE;MACTC,aAAa,EAAE,IAAI;MACnBC,mBAAmB,EAAE,KAAK;MAC1BC,KAAK,EAAE,EAAE;MACTC,KAAK,EAAEC,cAAc,CAACC,OAAO,CAAC,OAAO,MAAM,IAAI;MAC/CC,UAAU,EAAE,EAAE;MACdC,QAAQ,EAAE,EAAE;MACZC,OAAO,EAAE;IACX,CAAC;EACH,CAAC;EACDC,OAAOA,CAAA,EAAG;IACR,IAAI,CAACC,oBAAoB,CAAC,CAAC;IAC3B,IAAI,CAACC,eAAe,CAAC,CAAC;IACtB,IAAI,CAACC,cAAc,CAAC,CAAC;IACrB,IAAI,CAACC,cAAc,CAAC,CAAC;IACrB,IAAI,IAAI,CAACV,KAAK,EAAE;MACd,IAAI,CAACW,gBAAgB,CAAC,CAAC;IACzB;EACF,CAAC;EACDC,OAAO,EAAE;IACPC,aAAaA,CAACC,KAAK,EAAE;MACnB,IAAI,CAACjB,aAAY,GAAIiB,KAAK;MAC1B;IACF,CAAC;;IACD,MAAMP,oBAAmBA,CAAA,EAAK;MAC1B,IAAI;QACF,MAAMQ,OAAM,GAAI,MAAMvB,KAAK,CAACwB,GAAG,CAAC,sBAAsB,CAAC;QACrD,IAAI,CAACZ,QAAO,GAAIW,OAAO,CAACrB,IAAI;MAChC,EAAE,OAAOuB,KAAK,EAAE;QACdC,OAAO,CAACC,GAAG,CAACF,KAAK,CAAC;MACpB;IACF,CAAC;IACD,MAAMT,eAAcA,CAAA,EAAK;MACvB,IAAI;QACF,MAAMO,OAAM,GAAI,MAAMvB,KAAK,CAACwB,GAAG,CAAC,iBAAiB,CAAC;QAChD,IAAI,CAACI,SAAQ,GAAIL,OAAO,CAACrB,IAAI;MACjC,EAAE,OAAOuB,KAAK,EAAE;QACdC,OAAO,CAACC,GAAG,CAACF,KAAK,CAAC;MACpB;IACF,CAAC;IACH,MAAMR,cAAaA,CAAA,EAAK;MACpB,IAAI;QACF,MAAMM,OAAM,GAAI,MAAMvB,KAAK,CAACwB,GAAG,CAAC,kBAAkB,CAAC;QACjD,IAAI,CAACrB,KAAI,GAAIoB,OAAO,CAACrB,IAAI;MAC7B,EAAE,OAAOuB,KAAK,EAAE;QACdC,OAAO,CAACC,GAAG,CAACF,KAAK,CAAC;MACpB;IACF,CAAC;IACD,MAAMP,cAAaA,CAAA,EAAK;MACtB,IAAI;QACF,MAAMK,OAAM,GAAI,MAAMvB,KAAK,CAACwB,GAAG,CAAC,kBAAkB,CAAC;QACjD,IAAI,CAACpB,MAAK,GAAImB,OAAO,CAACrB,IAAI;MAC9B,EAAE,OAAOuB,KAAK,EAAE;QACdC,OAAO,CAACC,GAAG,CAACF,KAAK,CAAC;MACpB;IACF,CAAC;IACHI,gBAAgBA,CAAA,EAAG;MACjB,IAAI,CAACvB,mBAAkB,GAAI,iCAAiC;IAC9D,CAAC;IACD,MAAMa,gBAAgBA,CAAA,EAAG;MACvB,IAAI;QACF,MAAMX,KAAI,GAAIC,cAAc,CAACC,OAAO,CAAC,OAAO,CAAC;QAC7C,MAAMoB,YAAW,GAAI/B,UAAU,CAACS,KAAK,CAAC;QACtC,IAAI,CAACD,KAAI,GAAIuB,YAAY,CAACR,KAAK;MACjC,EAAE,OAAOG,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,8BAA8B,EAAEA,KAAK,CAAC;MACtD;IACF;EAEF;AAEF,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}