{"ast":null,"code":"import { createRouter, createWebHistory } from 'vue-router';\nimport { jwtDecode as jwt_decode } from \"jwt-decode\";\nimport HomeView from '../views/HomeView.vue';\nimport Service from '../views/Service.vue';\nimport Messages from '../views/Messages.vue';\nimport Feedback from '../views/Feedback.vue';\nimport Register from '../views/Register.vue';\nimport Login from '../views/Login.vue';\nimport Account from '../views/Account.vue';\nimport Admin from '../views/Admin/Admin.vue';\nimport PlanHolder from '../views/Admin/Planholder.vue';\nimport AgentRecord from '../views/Admin/AgentRecord.vue';\nimport PaymentHistory from '../views/Admin/PaymentHistory.vue';\nimport Feedbackk from '../views/Admin/Feedback.vue';\nimport Chat from '../components/Chat.vue';\nimport EditProfile from '../views/Admin/EditProfile.vue';\nimport Announcement from '../views/Admin/Announcement.vue';\nimport CreateAccount from '../views/Agent/CreateAccount.vue';\nimport Payment from '../views/Agent/Payment.vue';\nimport Forbidden from '../views/Forbidden.vue';\nconst routes = [{\n  path: '/',\n  name: 'home',\n  component: HomeView,\n  meta: {\n    allowedRoles: ['PlanHolder']\n  }\n}, {\n  path: '/services',\n  name: 'Service',\n  component: Service,\n  meta: {\n    requiresAuth: true,\n    allowedRoles: ['PlanHolder']\n  }\n}, {\n  path: '/messages',\n  name: 'Messages',\n  component: Messages,\n  meta: {\n    requiresAuth: true,\n    allowedRoles: ['PlanHolder']\n  }\n}, {\n  path: '/feedback',\n  name: 'Feedback',\n  component: Feedback,\n  meta: {\n    requiresAuth: true,\n    allowedRoles: ['PlanHolder']\n  }\n}, {\n  path: '/register',\n  name: 'register',\n  component: Register\n}, {\n  path: '/login',\n  name: 'login',\n  component: Login\n}, {\n  path: '/account',\n  name: 'account',\n  component: Account\n}, {\n  path: '/payment',\n  name: 'payment',\n  component: Payment\n}, {\n  path: '/admin',\n  name: 'admin',\n  component: Admin,\n  meta: {\n    requiresAuth: true,\n    allowedRoles: ['Admin']\n  }\n}, {\n  path: '/planholder',\n  name: 'planholder',\n  component: PlanHolder,\n  meta: {\n    requiresAuth: true,\n    allowedRoles: ['Admin']\n  }\n}, {\n  path: '/history',\n  name: 'history',\n  component: PaymentHistory,\n  meta: {\n    requiresAuth: true,\n    allowedRoles: ['Admin']\n  }\n}, {\n  path: '/feedbackk',\n  name: 'Feedbackk',\n  component: Feedbackk,\n  meta: {\n    requiresAuth: true,\n    allowedRoles: ['Admin']\n  }\n}, {\n  path: '/chat',\n  name: 'chat',\n  component: Chat\n}, {\n  path: '/admin/profile',\n  name: 'EditProfile',\n  component: EditProfile\n}, {\n  path: '/announcement',\n  name: 'Announcenment',\n  component: Announcement,\n  meta: {\n    requiresAuth: true,\n    allowedRoles: ['Admin']\n  }\n}, {\n  path: '/admin-record',\n  name: 'AgentRecord',\n  component: AgentRecord,\n  meta: {\n    requiresAuth: true,\n    allowedRoles: ['Admin']\n  }\n}, {\n  path: '/forbidden',\n  name: 'Forbidden',\n  component: Forbidden\n}, {\n  path: '/messages',\n  name: 'Messages',\n  component: Messages,\n  meta: {\n    requiresAuth: true,\n    allowedRoles: ['PlanHolder']\n  }\n}, {\n  path: '/agent',\n  name: 'agent',\n  component: CreateAccount,\n  meta: {\n    requiresAuth: true,\n    allowedRoles: ['Agent']\n  }\n}];\nconst router = createRouter({\n  history: createWebHistory(process.env.BASE_URL),\n  routes\n});\nrouter.beforeEach((to, from, next) => {\n  const token = sessionStorage.getItem('token');\n  if (to.meta.requiresAuth) {\n    if (!token) {\n      next('/');\n    } else {\n      const decodedToken = jwt_decode(token);\n      const userRole = decodedToken.aud;\n      if (to.meta.allowedRoles.includes(userRole)) {\n        next();\n      } else {\n        next('/forbidden');\n      }\n    }\n  } else {\n    next();\n  }\n});\nexport default router;","map":{"version":3,"names":["createRouter","createWebHistory","jwtDecode","jwt_decode","HomeView","Service","Messages","Feedback","Register","Login","Account","Admin","PlanHolder","AgentRecord","PaymentHistory","Feedbackk","Chat","EditProfile","Announcement","CreateAccount","Payment","Forbidden","routes","path","name","component","meta","allowedRoles","requiresAuth","router","history","process","env","BASE_URL","beforeEach","to","from","next","token","sessionStorage","getItem","decodedToken","userRole","aud","includes"],"sources":["C:/laragon/www/GitHub/Funeral_System/src/router/index.js"],"sourcesContent":["import { createRouter, createWebHistory } from 'vue-router'\r\nimport { jwtDecode as jwt_decode } from \"jwt-decode\";\r\n\r\nimport HomeView from '../views/HomeView.vue';\r\nimport Service from '../views/Service.vue';\r\nimport Messages from '../views/Messages.vue';\r\nimport Feedback from '../views/Feedback.vue';\r\n\r\nimport Register from '../views/Register.vue';\r\nimport Login from '../views/Login.vue';\r\nimport Account from '../views/Account.vue';\r\nimport Admin from '../views/Admin/Admin.vue';\r\nimport PlanHolder from '../views/Admin/Planholder.vue';\r\nimport AgentRecord from '../views/Admin/AgentRecord.vue';\r\nimport PaymentHistory from '../views/Admin/PaymentHistory.vue';\r\nimport Feedbackk from '../views/Admin/Feedback.vue';\r\nimport Chat from '../components/Chat.vue';\r\nimport EditProfile from '../views/Admin/EditProfile.vue';\r\nimport Announcement from '../views/Admin/Announcement.vue';\r\n\r\nimport CreateAccount from '../views/Agent/CreateAccount.vue';\r\nimport Payment from '../views/Agent/Payment.vue';\r\n\r\nimport Forbidden from '../views/Forbidden.vue';\r\nconst routes = [\r\n\r\n  {\r\n    path: '/', \r\n    name: 'home',\r\n    component: HomeView,\r\n    meta:{allowedRoles: ['PlanHolder'] }\r\n  },\r\n  {\r\n    path: '/services', \r\n    name: 'Service',\r\n    component: Service,\r\n    meta:{ requiresAuth: true, allowedRoles: ['PlanHolder'] }\r\n  },\r\n  {\r\n    path: '/messages', \r\n    name: 'Messages',\r\n    component: Messages,\r\n    meta:{ requiresAuth: true, allowedRoles: ['PlanHolder'] }\r\n  },\r\n  {\r\n    path: '/feedback', \r\n    name: 'Feedback',\r\n    component: Feedback,\r\n    meta:{ requiresAuth: true, allowedRoles: ['PlanHolder'] }\r\n  },\r\n  \r\n  {\r\n    path: '/register', \r\n    name: 'register',\r\n    component: Register,\r\n  },\r\n  {\r\n    path: '/login', \r\n    name: 'login',\r\n    component: Login,\r\n  },\r\n  {\r\n    path: '/account', \r\n    name: 'account',\r\n    component: Account,\r\n  },\r\n  {\r\n    path: '/payment', \r\n    name: 'payment',\r\n    component: Payment,\r\n  },\r\n  {\r\n    path: '/admin', \r\n    name: 'admin',\r\n    component: Admin,\r\n    meta:{ requiresAuth: true,allowedRoles: ['Admin'] }\r\n  },\r\n  {\r\n    path: '/planholder', \r\n    name: 'planholder',\r\n    component: PlanHolder,\r\n    meta:{ requiresAuth: true,allowedRoles: ['Admin'] }\r\n  },\r\n  {\r\n    path: '/history', \r\n    name: 'history',\r\n    component: PaymentHistory,\r\n    meta:{ requiresAuth: true,allowedRoles: ['Admin'] }\r\n  },\r\n  \r\n  {\r\n    path: '/feedbackk', \r\n    name: 'Feedbackk',\r\n    component: Feedbackk,\r\n    meta:{ requiresAuth: true,allowedRoles: ['Admin'] }\r\n  },\r\n \r\n  {\r\n    path: '/chat',\r\n    name: 'chat',\r\n    component: Chat,\r\n  },\r\n  {\r\n    path: '/admin/profile', \r\n    name: 'EditProfile',\r\n    component: EditProfile,\r\n  },\r\n  {\r\n    path: '/announcement', \r\n    name: 'Announcenment',\r\n    component: Announcement,\r\n    meta:{ requiresAuth: true,allowedRoles: ['Admin'] }\r\n  },\r\n  {\r\n    path: '/admin-record', \r\n    name: 'AgentRecord',\r\n    component: AgentRecord,\r\n    meta:{ requiresAuth: true,allowedRoles: ['Admin'] }\r\n  },\r\n  {\r\n    path: '/forbidden', \r\n    name: 'Forbidden',  \r\n    component: Forbidden,\r\n  },\r\n  {\r\n    path: '/messages', \r\n    name: 'Messages',  \r\n    component: Messages,\r\n    meta:{ requiresAuth: true,allowedRoles: ['PlanHolder'] }\r\n  },\r\n  {\r\n    path: '/agent', \r\n    name: 'agent',\r\n    component: CreateAccount,\r\n    meta:{ requiresAuth: true,allowedRoles: ['Agent'] }\r\n  },\r\n\r\n]\r\nconst router = createRouter({\r\n  history: createWebHistory(process.env.BASE_URL),\r\n  routes\r\n})\r\nrouter.beforeEach((to, from, next) => {\r\n  const token = sessionStorage.getItem('token');\r\n  if(to.meta.requiresAuth){\r\n    if(!token){\r\n      next('/');\r\n    }else{\r\n      const decodedToken = jwt_decode(token);\r\n      const userRole = decodedToken.aud;\r\n\r\n      if (to.meta.allowedRoles.includes(userRole)){\r\n        next();\r\n      }else {\r\n        next('/forbidden');\r\n      }\r\n    }\r\n  }else {\r\n    next();\r\n  }\r\n});\r\n\r\nexport default router"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}